# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    - CRATE_NAME=glide

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    ## Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: dSrlu4zskhRCCJfX/hn5rySDoRhSfT6DWzde+BrnwIasx4MMehL85CEL9Yg+6Bv9QFEkBDm0iV8HJVra5XG2griJPAy2111tmoJd0zCmYeqMqHxBrp0rO2Rg7PHxsQ2gOOW6p0+Spzp9MZSF7s/sCYIkHNsEA3/FEjMiofl6LBJ1nG7TKIR68HCChf/JHODAd9j7KBUopQgEo+3G1J6bjNlNxavjdr9H/SCJLHkKrI+tFBX+MNfZ5oyFzx6mw3l0Hry8HsakyVcFu93rwWwWfcg5DHh3/F+xAr45l7iKKlphJgsBmTqF7T15e8KnOoV8QPhbgMpo9xa5jZOYNjmnNs7wCzW5EGJu4tgXPtbKl+LVaT+eQB/CP5Mu9ONq/JV19l5nezSrr8VgrqfwOQnQ2WfU5EcP3fkMVoPxhtkgnUkPWpoH1a8lAm4C8ktkcHeHXDNLjRWWGMHJWqMUKOEeGS4GhGQ+4ToUu8dcNHZ0B+bKOqWJD/C3b/MAukPcn089mAfc/cT9uxlNX7Dr6KusEwpTetHffBlOM6nGXzoaQtJDr3YuiId56c6HqpM/r1BggRRkaneAowTSos9LhzDaQ3ajGTL4Vvlq8aQKW+8nCFCRr7tNFxWAaJrwB1D4pvMDu3VvNzpkddROMeL6q271Ly9LMv+BERLVL2TQv7ofjBw=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
